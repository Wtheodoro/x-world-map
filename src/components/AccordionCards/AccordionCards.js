import { useState } from 'react'
import Image from 'next/image'

import { getFormattedLocationTitle } from '@lib/locations'

import * as styles from './AccordionCards.module.css'

const AccordionCards = ({ Card, data = [], label }) => {
  const [expanded, setExpanded] = useState()

  const toggle = (i) => () => {
    setExpanded(i)
  }

  const formattedLocationTitle = getFormattedLocationTitle(data[0]?.location)

  return data.length > 1 ? (
    <div className={styles.component}>
      <h2 className={styles.title}>
        <svg viewBox="0 0 100 100" width="32px" height="32px">
          <path d="M17.5,92.536c-1.371,0-2.684-0.423-3.795-1.223C12.017,90.106,11,88.13,11,86.036V27.772	c0-2.788,1.774-5.263,4.415-6.156l21.499-7.283c0.673-0.229,1.374-0.344,2.084-0.344c0.674,0,1.342,0.104,1.983,0.31l14.177,4.569	C59.169,11.124,67.687,7,74.966,7c10.657,0,22.083,8.529,22.104,21.227c0.008,5.13-2.287,10.998-7.008,17.906v32.62	c0,2.789-1.775,5.264-4.418,6.157l-21.542,7.283c-0.688,0.229-1.381,0.342-2.083,0.342c-0.664,0-1.321-0.101-1.955-0.301	l-20.966-6.643l-19.516,6.602C18.907,92.421,18.208,92.536,17.5,92.536z" opacity=".35" />
          <path fill="#f2f2f2" d="M15.5,90.536c-1.371,0-2.684-0.423-3.795-1.223C10.017,88.106,9,86.13,9,84.036V25.772	c0-2.788,1.774-5.263,4.415-6.156l21.499-7.283c0.673-0.229,1.374-0.344,2.084-0.344c0.674,0,1.342,0.104,1.983,0.31l14.177,4.569	C57.169,9.124,65.687,5,72.966,5c10.657,0,22.083,8.529,22.104,21.227c0.008,5.13-2.287,10.998-7.008,17.906v32.62	c0,2.789-1.775,5.264-4.418,6.157l-21.542,7.283c-0.688,0.229-1.381,0.342-2.083,0.342c-0.664,0-1.321-0.101-1.955-0.301	l-20.966-6.643l-19.516,6.602C16.907,90.421,16.208,90.536,15.5,90.536z" />
          <path fill="#d9eeff" d="M59.542,25.772l-22.021-7.283L15.5,25.772v58.264l22.021-7.283l22.5,7.283l21.542-7.283V18.489 L59.542,25.772z" />
          <polygon fill="#70bfff" points="36.914,71.824 20,77.564 20,29.107 37.1,23.367 59.61,30.702 77,24.962 77,73.419 59.582,79.071" />
          <polygon points="60,84.807 37,76.608 37,18.682 60,25.9" opacity=".35" />
          <path fill="#f4665c" d="M73,12.667c-6.959,0-14.222,5.526-14.234,13.443C58.752,35.584,73,49.833,73,49.833	S87.249,35.604,87.234,26.11C87.221,18.204,79.959,12.667,73,12.667z" />
          <path fill="none" stroke="#40396e" strokeLinecap="round" strokeLinejoin="round" strokeMiterlimit="10" strokeWidth="3" d="M88.571,26.238C88.557,17.571,80.595,11.5,72.966,11.5c-7.281,0-14.849,5.525-15.536,13.574L37,18.489l-21.5,7.283v58.264	l21.532-7.283l22.988,7.283l21.542-7.283V42.075C85.186,37.072,88.578,31.091,88.571,26.238z" />
          <circle cx="73" cy="27.029" r="6.998" fill="#f2f2f2" />
        </svg>
        {formattedLocationTitle}
      </h2>
      {data.map((item, i) => (
        <div
          key={`profile-${item.id}`}
          className={[
            styles.item,
            expanded === i ? styles.expandedItem : styles.item
          ].join(' ')}
        >
          <h3
            className={[styles.button, item.avatar ? '' : styles.imageless].join(' ')}
            onClick={toggle(i)}
          >
            {item.avatar && (
              <div className={styles.image}>
                <Image
                  src={item.avatar.url}
                  alt={item.name}
                  width="32"
                  height="32"
                  layout="fill"
                  objectFit="cover"
                />
              </div>
            )}
            <div className={styles.label}>
              {item[label]}
            </div>
            <div className={styles.arrow}>
              <svg viewBox="0 0 100 100" width="24px" heigth="24px">
                <path d="M95.501,37.12c0,1.712-0.661,3.329-1.86,4.552L56.639,79.369c-1.214,1.237-2.905,1.947-4.639,1.947 s-3.425-0.71-4.639-1.947l-37-37.695c-0.768-0.784-1.708-2.149-1.85-4.226l-0.013-0.195l0.001-0.195 c0.017-1.736,0.709-3.361,1.948-4.577l8.084-7.935c1.238-1.216,2.877-1.877,4.613-1.861c1.737,0.016,3.363,0.708,4.58,1.948 l24.275,24.731l24.276-24.732c1.215-1.239,2.842-1.931,4.579-1.947c1.736-0.016,3.375,0.646,4.614,1.862l8.085,7.935 c1.238,1.214,1.93,2.84,1.947,4.576v0.024V37.12z" opacity=".35" />
                <path fill="#f2f2f2" d="M93.501,35.12c0,1.712-0.661,3.329-1.86,4.552L54.639,77.369c-1.214,1.237-2.905,1.947-4.639,1.947 s-3.425-0.71-4.639-1.947l-37-37.695c-0.768-0.784-1.708-2.149-1.85-4.226l-0.013-0.195l0.001-0.195 c0.017-1.736,0.709-3.361,1.948-4.577l8.084-7.935c1.238-1.216,2.877-1.877,4.613-1.861c1.737,0.016,3.363,0.708,4.58,1.948 l24.275,24.731l24.276-24.732c1.215-1.239,2.842-1.931,4.579-1.947c1.736-0.016,3.375,0.646,4.614,1.862l8.085,7.935 c1.238,1.214,1.93,2.84,1.947,4.576v0.024V35.12z" />
                <polygon fill="#70bfff" points="87.001,35.12 50.001,72.816 13.001,35.12 21.086,27.185 50.001,56.643 78.915,27.185" />
                <path fill="#40396e" d="M50.001,74.315c-0.403,0-0.789-0.162-1.07-0.449l-37-37.695c-0.279-0.284-0.433-0.667-0.43-1.065 c0.004-0.397,0.166-0.778,0.449-1.056l8.085-7.936c0.591-0.581,1.541-0.572,2.121,0.02l27.845,28.368l27.844-28.368 c0.579-0.592,1.529-0.6,2.121-0.02l8.085,7.936c0.284,0.278,0.445,0.659,0.449,1.056c0.003,0.398-0.151,0.781-0.43,1.065 l-37,37.695C50.79,74.153,50.404,74.315,50.001,74.315z M15.122,35.14l34.879,35.535L84.88,35.14l-5.944-5.834L51.071,57.693 c-0.563,0.574-1.577,0.574-2.141,0L21.066,29.306L15.122,35.14z" />
              </svg>
            </div>
          </h3>
          <div className={styles.content}>
            <Card item={item} inAccordion />
          </div>
        </div>
      ))}
    </div>
  ) : (
    <Card item={data[0]} />
  )
}

export default AccordionCards
